
MOV_BASE = 10
ADD_BASE = 20
SUB_BASE = 30
MUL_BASE= 40
DIV_BASE = 50
CMP_BASE = 60
JMP_BASE = 70
JZ_BASE = 80
JNZ_BASE = 90
LOAD_BASE = 100
STORE_BASE = 110
PUSH_BASE = 120
POP_BASE = 130
SYSCALL_BASE = 140


OP_MOV32RR = MOV_BASE
OP_MOV32RI = MOV_BASE + 1
OP_MOV16RR = MOV_BASE + 2
OP_MOV16RI = MOV_BASE + 3
OP_MOV8RR = MOV_BASE + 4
OP_MOV8RI = MOV_BASE + 5

OP_ADD32RR = ADD_BASE
OP_ADD32RI = ADD_BASE + 1
OP_ADD16RR = ADD_BASE + 2
OP_ADD16RI = ADD_BASE + 3
OP_ADD8RR = ADD_BASE + 4
OP_ADD8RI = ADD_BASE + 5

OP_SUB32RR = SUB_BASE
OP_SUB32RI = SUB_BASE + 1
OP_SUB16RR = SUB_BASE + 2
OP_SUB16RI = SUB_BASE + 3
OP_SUB8RR = SUB_BASE + 4
OP_SUB8RI = SUB_BASE + 5

OP_MUL32RR = MUL_BASE
OP_MUL32RI = MUL_BASE + 1
OP_MUL16RR = MUL_BASE + 2
OP_MUL16RI = MUL_BASE + 3
OP_MUL8RR = MUL_BASE + 4
OP_MUL8RI = MUL_BASE + 5

OP_DIV32RR = DIV_BASE
OP_DIV32RI = DIV_BASE + 1
OP_DIV16RR = DIV_BASE + 2
OP_DIV16RI = DIV_BASE + 3
OP_DIV8RR = DIV_BASE + 4
OP_DIV8RI = DIV_BASE + 5

OP_CMP32RR = CMP_BASE
OP_CMP32RI = CMP_BASE + 1
OP_CMP16RR = CMP_BASE + 2
OP_CMP16RI = CMP_BASE + 3
OP_CMP8RR = CMP_BASE + 4
OP_CMP8RI = CMP_BASE + 5

OP_JMP32R = JMP_BASE
OP_JMP32I = JMP_BASE + 2

OP_JZ32R = JZ_BASE
OP_JZ32I = JZ_BASE + 2

OP_JNZ32R = JNZ_BASE
OP_JNZ32I = JNZ_BASE + 2

OP_LOAD32RR = LOAD_BASE
OP_LOAD32RI = LOAD_BASE + 1
OP_LOAD16RR = LOAD_BASE + 2
OP_LOAD16RI = LOAD_BASE + 3
OP_LOAD8RR = LOAD_BASE + 4
OP_LOAD8RI = LOAD_BASE + 5

OP_STORE32RR = STORE_BASE
OP_STORE32RI = STORE_BASE + 1
OP_STORE16RR = STORE_BASE + 2
OP_STORE16RI = STORE_BASE + 3
OP_STORE8RR = STORE_BASE + 4
OP_STORE8RI = STORE_BASE + 5

OP_PUSH32R = PUSH_BASE
OP_PUSH32I = PUSH_BASE + 1
OP_PUSH16R = PUSH_BASE + 2
OP_PUSH16I = PUSH_BASE + 3
OP_PUSH8R = PUSH_BASE + 4
OP_PUSH8I = PUSH_BASE + 5

OP_POP32R = POP_BASE
OP_POP16R = POP_BASE + 1
OP_POP8R = POP_BASE + 2

OP_SYSCALL = SYSCALL_BASE

instructions = [
    # All instructions in this array:
    OP_MOV32RR,
    OP_MOV32RI,
    OP_MOV16RR,
    OP_MOV16RI,
    OP_MOV8RR,
    OP_MOV8RI,

    OP_ADD32RR,
    OP_ADD32RI,
    OP_ADD16RR,
    OP_ADD16RI,
    OP_ADD8RR,
    OP_ADD8RI,

    OP_SUB32RR,
    OP_SUB32RI,
    OP_SUB16RR,
    OP_SUB16RI,
    OP_SUB8RR,
    OP_SUB8RI,

    OP_MUL32RR,
    OP_MUL32RI,
    OP_MUL16RR,
    OP_MUL16RI,
    OP_MUL8RR,
    OP_MUL8RI,

    OP_DIV32RR,
    OP_DIV32RI,
    OP_DIV16RR,
    OP_DIV16RI,
    OP_DIV8RR,
    OP_DIV8RI,

    OP_CMP32RR,
    OP_CMP32RI,
    OP_CMP16RR,
    OP_CMP16RI,
    OP_CMP8RR,
    OP_CMP8RI,

    OP_JMP32R,
    OP_JMP32I,

    OP_JZ32R,
    OP_JZ32I,

    OP_JNZ32R,
    OP_JNZ32I,

    OP_LOAD32RR,
    OP_LOAD32RI,
    OP_LOAD16RR,
    OP_LOAD16RI,
    OP_LOAD8RR,
    OP_LOAD8RI,

    OP_STORE32RR,
    OP_STORE32RI,
    OP_STORE16RR,
    OP_STORE16RI,
    OP_STORE8RR,
    OP_STORE8RI,

    OP_PUSH32R,
    OP_PUSH32I,
    OP_PUSH16R,
    OP_PUSH16I,
    OP_PUSH8R,
    OP_PUSH8I,

    OP_POP32R,
    OP_POP16R,
    OP_POP8R,

    OP_SYSCALL,
]

instruction_names = [
    # All instructions in this array:
    "MOV32RR",
    "MOV32RI",
    "MOV16RR",
    "MOV16RI",
    "MOV8RR",
    "MOV8RI",

    "ADD32RR",
    "ADD32RI",
    "ADD16RR",
    "ADD16RI",
    "ADD8RR",
    "ADD8RI",

    "SUB32RR",
    "SUB32RI",
    "SUB16RR",
    "SUB16RI",
    "SUB8RR",
    "SUB8RI",

    "MUL32RR",
    "MUL32RI",
    "MUL16RR",
    "MUL16RI",
    "MUL8RR",
    "MUL8RI",

    "DIV32RR",
    "DIV32RI",
    "DIV16RR",
    "DIV16RI",
    "DIV8RR",
    "DIV8RI",

    "CMP32RR",
    "CMP32RI",
    "CMP16RR",
    "CMP16RI",
    "CMP8RR",
    "CMP8RI",

    "JMP32R",
    "JMP32I",

    "JZ32R",
    "JZ32I",

    "JNZ32R",
    "JNZ32I",

    "LOAD32RR",
    "LOAD32RI",
    "LOAD16RR",
    "LOAD16RI",
    "LOAD8RR",
    "LOAD8RI",

    "STORE32RR",
    "STORE32RI",
    "STORE16RR",
    "STORE16RI",
    "STORE8RR",
    "STORE8RI",

    "PUSH32R",
    "PUSH32I",
    "PUSH16R",
    "PUSH16I",
    "PUSH8R",
    "PUSH8I",

    "POP32R",
    "POP16R",
    "POP8R",

    "SYSCALL",
]